# coding: utf-8

"""
    views.py ~ 木犀分享视图文件

        主页: 发布分享

        /:  主页
        /share:  发布分享的页面
        /login:  登录页
        /logout: 登出页
        /new: 显示最新分享
        /hot: 显示最热分享
        /view_share: 查看分享的具体信息，评论，发表评论
"""

# models import
from . import share
from .forms import ShareForm, CommentForm
from .. import  db
from ..models import Share, Comment, User
# from ..auth._decorate import auth_login, auth_logout
from .forms import ShareForm
from ..auth.forms import LoginForm
from flask import url_for, render_template, redirect, session
from flask.ext.login import current_user, login_required, logout_user


@share.route('/')
def index():
    """
    muxi_share 分享你的知识

        主页，默认显示最新的分享
    """
    shares = Share.query.all()
    for share in shares:
        share.comments = len(Comment.query.filter_by(share_id=share.id).all())
    return render_template('share_index.html', shares=shares)


@share.route('/new')
def new():
    """显示最新发布的扩展"""
    shares = Share.query.all()
    for share in shares:
        share.comments = len(Comment.query.filter_by(share_id=share.id).all())
    return render_template('share_index.html', shares=shares)


@share.route('/hot')
def hot():
    """显示最热扩展:评论数最多的扩展"""
    hots = Share.query.order_by(Share.comment).all()
    for share in hots:
        share.comments = len(Comment.query.filter_by(share_id=share.id).all())
    return render_template("index.html", hots=hots)


@share.route('/share/<int:id>')
@login_required
def view_share(id):
    """显示特定id的分享，相关信息以及评论
       实现评论表单发表自己的评论"""
    share = Share.query.get_or_404(id)
    form = CommentForm()
    if form.validate_on_submit():
        comment = Comment(
            comment = form.comment.data,
            author_id = current_user.id,
            share_id = id
        )
        db.session.add(comment)
        db.session.commit()
    return render_template('share.html', share=share)


@login_required
@share.route('/share_send')
def add_share():
    """分享"""
    session['default_text'] = "书写你的分享~"
    form = ShareForm()
    if form.validate_on_submit():
        share = Share(
            title = form.title.data,
            share = form.share.data,
            author_id = current_user.id
        )
        db.session.add(share)
        db.session.commit()
        return redirect(url_for('share.index'))
    return render_template("share_send.html", form=form, session=session)
